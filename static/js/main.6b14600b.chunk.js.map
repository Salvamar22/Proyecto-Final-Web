{"version":3,"sources":["Services/session.services.js","Contexts/SessionContext.js","Components/Title/Title.jsx","Components/Label/Label.jsx","Components/Input/Input.jsx","Pages/Login/Login.jsx","Pages/NotFound/NotFound.jsx","Services/user.services.js","Components/Options/Options.jsx","Components/TabContainer/TabContainer.jsx","Components/Post/Post.jsx","Components/PostContainer/PostContainer.jsx","Components/Comment/Comment.jsx","Components/CommentView/CommentView.jsx","Pages/UserPage/UserPage.jsx","Services/admin.services.js","Components/PostForm/PostForm.jsx","Pages/AdminPage/AdminPage.jsx","Components/PrivateRoute/PrivateRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","sessionServices","login","username","password","a","fetch","method","headers","body","JSON","stringify","response","ok","json","data","verifyToken","token","config","Authorization","console","error","SessionContext","React","createContext","TOKEN_KEY","SessionProvider","props","useState","undefined","setToken","user","setUser","useEffect","tokenLS","localStorage","getItem","rest","role","setTokenAll","newToken","setItem","useCallback","loginAsync","status","tokenRes","logout","value","useMemo","Provider","useSessionContext","context","useContext","Error","Title","text","className","Label","Input","attribute","handleChange","param","id","name","placeholder","type","onChange","e","target","rolePages","Login","localUser","setLocalUser","setPassword","navigate","useNavigate","setError","logged","log","replace","to","onClick","NotFound","userServices","getAll","limit","page","getOne","getFavorites","favorites","like","fav","comment","description","Options","options","onClickOutside","i","myRef","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","map","option","action","TabContainer","tabIndex","tabController","children","Post","post","onOptions","onLike","onFav","onChat","src","image","alt","title","active","likes","length","comments","PostContainer","posts","p","_id","Comment","CommentView","onComment","c","onSubmit","preventDefault","FormData","get","nullPost","createdAt","UserPage","selectedPost","setSelectedPost","allPosts","setAllPosts","favs","setFavs","favPosts","setFavPosts","showOptions","setShowOptions","setPage","setTabController","Promise","all","fId","res","u","onLikeHandler","set","updatePost","onFavHandler","onSeeCommentsHandler","onCommentHandler","adminServices","createPost","ownedPost","toggleActive","PostForm","idPost","titlePost","descriptionPost","imgPost","img","setImg","defaultValue","save","onChangeHandler","AdminPage","setPosts","onCreateHandler","formData","onUpdateHandler","onToggleOptionHandler","onEditOptionHandler","PrivateRoute","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wQAAMA,EAAW,4CACXC,EAAkB,GAExBA,EAAgBC,MAAhB,uCAAwB,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,sEACGC,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,SAAUA,EACVC,SAAUA,MARE,YACdQ,EADc,QAYPC,GAZO,gCAaGD,EAASE,OAbZ,cAaVC,EAbU,yBAcTA,GAdS,gCAiBb,IAjBa,2CAAxB,wDAoBAd,EAAgBe,YAAhB,uCAA8B,WAAOC,GAAP,mBAAAZ,EAAA,sEAEhBa,EAAS,CACXX,OAAQ,MACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALX,SASCX,MAAM,GAAD,OAAIN,EAAJ,gBAA4BkB,GATlC,YAShBN,EATgB,QAWTC,GAXS,iCAYCD,EAASE,OAZV,cAYZC,EAZY,yBAaXA,GAbW,iEAgBtBK,QAAQC,MAAR,MAhBsB,kBAiBf,IAjBe,0DAA9B,sDAqBepB,Q,OCzCTqB,EAAiBC,IAAMC,gBACvBC,EAAY,QAELC,EAAkB,SAACC,GAC5B,MAA0BC,wBAASC,GAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAwBF,wBAASC,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAIAC,qBAAU,WACN,IAAMjB,EAAW,uCAAG,kCAAAX,EAAA,2DACV6B,EAAUC,aAAaC,QAAQX,IADrB,gCAKOxB,EAAgBe,YAAYkB,GALnC,QAKNG,EALM,UAODlC,EAAkBkC,EAAlBlC,SAAUmC,EAAQD,EAARC,KAEdnC,GAAYmC,IACXN,EAAQ,CAAE7B,WAAUmC,SACpBC,EAAYL,KAXR,2CAAH,qDAqBjBlB,MACD,CAACC,IAGJ,IAAMsB,EAAc,SAACC,GACjBL,aAAaM,QAAQhB,EAAWe,GAChCV,EAASU,IAGPtC,EAAQwC,uBAAY,SAACvC,EAAUC,GACjC,IAAMuC,EAAU,uCAAG,gCAAAtC,EAAA,6DACXuC,GAAS,EADE,kBAGuB3C,EAAgBC,MAAMC,EAAUC,GAHvD,iBAGIyC,EAHJ,EAGH5B,SAGJsB,EAAYM,GACZD,GAAS,GAPF,gDAUXxB,QAAQC,MAAR,MACAD,QAAQC,MAAM,kBAXH,2CAaJuB,GAbI,+DAAH,qDAiBhB,OAAOD,MACR,IAEGG,EAASJ,uBAAY,WACvBV,OAAQH,GACRU,EAAY,MACb,IAEGQ,EAAQC,mBAAS,iBAAO,CAC1B/B,MAAOA,EACPc,KAAMA,EACN7B,MAAOA,EACP4C,OAAQA,KACR,CAAC7B,EAAOc,IAEZ,OAAO,cAACT,EAAe2B,SAAhB,aAAyBF,MAASA,GAAWpB,KAG3CuB,EAAoB,WAC7B,IAAMC,EAAU5B,IAAM6B,WAAW9B,GAEjC,IAAI6B,EACA,MAAM,IAAIE,MAAM,wBAGpB,OAAOF,GC3EIG,EATD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEb,OACI,qBAAKC,UAAU,uCAAf,SACA,uBAAOA,UAAU,cAAjB,SAAgCD,OCIzBE,EARF,SAAC,GAAY,IAAXF,EAAU,EAAVA,KACX,OACI,qBAAKC,UAAU,4DAAf,SACI,gCAAQD,OCaLG,EAhBD,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,aAAwB,EAAVC,MACrC,OACI,qBAAKL,UAAU,oFAAf,SACI,uBACAM,GAAIH,EAAUG,GACdC,KAAMJ,EAAUI,KAChBC,YAAaL,EAAUK,YACvBC,KAAMN,EAAUM,KAChBC,SAAU,SAACC,GAAD,OAAOP,EAAaO,EAAEC,OAAOL,KAAMI,EAAEC,OAAOrB,QACtDS,UAAU,+BCHhBa,EAAY,CACd,MAAS,4BACT,KAAQ,4BA2EGC,EAxED,WACV,MAAkC1C,mBAAS,IAA3C,mBAAO2C,EAAP,KAAkBC,EAAlB,KACA,EAAgC5C,mBAAS,IAAzC,mBAAOxB,EAAP,KAAiBqE,EAAjB,KACA,EAAsBvB,IAAfhD,EAAP,EAAOA,MAAO6B,EAAd,EAAcA,KACR2C,EAAWC,cACjB,EAA0B/C,oBAAS,GAAnC,mBAAOP,EAAP,KAAcuD,EAAd,KAUA,SAAShB,EAAaG,EAAMhB,GACZ,YAATgB,EACHS,EAAazB,GAET0B,EAAY1B,GAnBJ,4CAsBhB,8BAAA1C,EAAA,sEACyBH,EAAMqE,EAAWnE,GAD1C,YACUyE,EADV,+BAGQzD,QAAQ0D,IAAI,YACZF,GAAS,GAJjB,kBAKe,cAAC,IAAD,CAAUG,SAAO,EAACC,GAAE,UAC1BX,EAAUE,EAAUjC,aADM,QACG,OANtC,OAQQsC,GAAUC,GARlB,6CAtBgB,sBAiChB,OAxBA5C,qBAAW,WACG,IAAD,EAANF,GACC2C,EAAQ,UAACL,EAAUtC,EAAKO,aAAhB,QAAyB,OAEtC,CAACP,IAqBA,qBAAKyB,UAAU,4EAAf,SACI,sBAAKA,UAAW,sFAAhB,UACA,cAAC,EAAD,CAAOD,KAAK,oBACXlC,GAAS,mBAAGmC,UAAU,sEAAb,gGAKV,cAAC,EAAD,CAAOD,KAAK,YACZ,cAAC,EAAD,CACAI,UAAW,CACPG,GAAI,UACJC,KAAM,UACNE,KAAM,OACND,YAAa,sBAEjBJ,aAAcA,IAEd,cAAC,EAAD,CAAOL,KAAK,kBACZ,cAAC,EAAD,CACAI,UAAW,CACPG,GAAI,gBACJC,KAAM,gBACNE,KAAM,WACND,YAAa,4BAGjBJ,aAAcA,IAGd,wBAAQJ,UAAU,0GACRyB,QAjEF,2CAgER,4B,QCvDGC,EAnBE,WAEb,IAAMR,EAAWC,cAMjB,OACI,sBAAKnB,UAAU,0EAAf,UACI,cAAC,IAAD,CAAgBA,UAAU,iBAC1B,oBAAIA,UAAU,wCAAd,iBACA,oBAAIA,UAAU,kCAAd,+BACA,mBAAGA,UAAU,kCAAb,qDACA,wBAAQA,UAAU,gDAAgDyB,QAAS,SAACd,GAAD,OAV/EO,EAAS,eACTtD,QAAQ0D,IAAI,gBASR,6B,OCjBN9E,EAAW,4CACXmF,EAAe,GAErBA,EAAaC,OAAb,uCAAsB,WAAOnE,GAAP,mCAAAZ,EAAA,6DAAcgF,EAAd,+BAAoB,GAAIC,EAAxB,+BAA6B,EAA7B,SAERpE,EAAS,CACXX,OAAQ,MACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALnB,SASSX,MAAM,GAAD,OAAIN,EAAJ,2BAA+BqF,EAA/B,iBAA6CC,GAAQpE,GATnE,YASRN,EATQ,QAWDC,GAXC,kCAYSD,EAASE,OAZlB,eAYJC,EAZI,yBAaHA,EAAKA,MAbF,iEAgBdK,QAAQC,MAAR,MAhBc,kBAiBP,IAjBO,0DAAtB,sDAqBA8D,EAAaI,OAAb,uCAAsB,WAAOtE,EAAO6C,GAAd,mBAAAzD,EAAA,sEAERa,EAAS,CACXX,OAAQ,MACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALnB,SASSX,MAAM,GAAD,OAAIN,EAAJ,qBAAyB8D,GAAM5C,GAT7C,YASRN,EATQ,QAWDC,GAXC,iCAYSD,EAASE,OAZlB,cAYJC,EAZI,yBAaHA,GAbG,iEAgBdK,QAAQC,MAAR,MAhBc,kBAiBP,IAjBO,0DAAtB,wDAqBA8D,EAAaK,aAAb,uCAA4B,WAAOvE,GAAP,mBAAAZ,EAAA,sEAEda,EAAS,CACXX,OAAQ,MACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALb,SASGX,MAAM,GAAD,OAAIN,EAAJ,aAAyBkB,GATjC,YASdN,EATc,QAWPC,GAXO,iCAYGD,EAASE,OAZZ,cAYVC,EAZU,yBAaTA,EAAK0E,WAbI,iEAgBpBrE,QAAQC,MAAR,MAhBoB,kBAiBb,IAjBa,0DAA5B,sDAsBA8D,EAAaO,KAAb,uCAAoB,WAAOzE,EAAO6C,GAAd,mBAAAzD,EAAA,sEAENa,EAAS,CACXX,OAAQ,QACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALrB,SASWX,MAAM,GAAD,OAAIN,EAAJ,sBAA0B8D,GAAM5C,GAThD,YASNN,EATM,QAWCC,GAXD,iCAYWD,EAASE,OAZpB,cAYFC,EAZE,yBAaDA,GAbC,iEAgBZK,QAAQC,MAAR,MAhBY,kBAiBL,IAjBK,0DAApB,wDAsBA8D,EAAaQ,IAAb,uCAAmB,WAAO1E,EAAO6C,GAAd,mBAAAzD,EAAA,sEAELa,EAAS,CACXX,OAAQ,QACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KALtB,SASYX,MAAM,GAAD,OAAIN,EAAJ,qBAAyB8D,GAAM5C,GAThD,YASLN,EATK,QAWEC,GAXF,iCAYYD,EAASE,OAZrB,cAYDC,EAZC,yBAaAA,GAbA,iEAgBXK,QAAQC,MAAR,MAhBW,kBAiBJ,IAjBI,0DAAnB,wDAqBA8D,EAAaS,QAAb,uCAAuB,WAAO3E,EAAO6C,EAAI+B,GAAlB,mBAAAxF,EAAA,sEAETa,EAAS,CACXX,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChBW,cAAc,UAAD,OAAYF,IAE7BR,KAAMC,KAAKC,UAAU,CACjBkF,YAAaA,KATN,SAaQvF,MAAM,GAAD,OAAIN,EAAJ,yBAA6B8D,GAAM5C,GAbhD,YAaTN,EAbS,QAeFC,GAfE,iCAgBQD,EAASE,OAhBjB,cAgBLC,EAhBK,yBAiBJA,GAjBI,iEAoBfK,QAAQC,MAAR,MApBe,kBAqBR,IArBQ,0DAAvB,0DAyBe8D,QCxGAW,EA7BC,SAAC,GAA2C,IAAxCC,EAAuC,EAAvCA,QAAuC,IAA9BC,sBAA8B,MAAf,aAAe,EAEnDC,EAAI,EACFC,EAAQC,mBAERC,EAAqB,SAAAjC,GAClB+B,EAAMG,QAAQC,SAASnC,EAAEC,SAC1B4B,KASR,OALA/D,qBAAU,WAEN,OADAsE,SAASC,iBAAiB,YAAaJ,GAChC,kBAAMG,SAASE,oBAAoB,YAAaL,OAI3D,qBAAKM,IAAMR,EAAQ1C,UAAS,uFAA5B,SAEQuC,EAAQY,KACR,SAAAC,GACI,OAAO,yBAAQpD,UAAU,mCAA6CyB,QAAU2B,EAAOC,OAAhF,cAA2FD,EAAOrD,KAAlG,MAA0D0C,WCdlEa,EATM,SAAC,GAAyD,IAAD,IAAtDtD,iBAAsD,MAA5C,GAA4C,EAAxCuD,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC3D,OACKF,IAAaC,GACV,qBAAKxD,UAAWA,EAAhB,SACMyD,K,wBCiCHC,EA/BF,SAAC,GAAqF,IAAlFC,EAAiF,EAAjFA,KAAiF,IAA3EC,iBAA2E,MAAjE,aAAiE,MAAvDC,cAAuD,MAAhD,aAAgD,MAAtCC,aAAsC,MAAhC,aAAgC,MAAtBC,cAAsB,MAAf,aAAe,EAE9F,OACA,sBAAK/D,UAAU,8HAAf,UACI,sBAAKA,UAAU,yCAAf,UACI,uBAAMA,UAAU,0BAAhB,UAA2C2D,EAAKpF,KAAK5B,SAArD,OACA,wBAAQ8E,QAAU,WAAQmC,EAAUD,IAApC,SACI,cAAC,IAAD,CAAqB3D,UAAU,6BAGvC,qBAAKA,UAAU,0BAAyBgE,IAAG,UAAML,EAAKM,OAASC,IAAI,SACnE,kCAAKP,EAAKQ,MAAV,OACA,oCAAOR,EAAKtB,YAAZ,OACA,sDAAkBsB,EAAKS,OAAS,KAAM,MAAtC,OACA,sBAAKpE,UAAW,+CAAhB,UACI,yBAAQyB,QAAS,WAAKoC,EAAOF,IAA7B,UACI,cAAC,IAAD,CAAY3D,UAAS,yCACnB2D,EAAKU,MAAMC,UAEjB,wBAAQ7C,QAAS,WAAKqC,EAAMH,IAA5B,SACI,cAAC,IAAD,CAAQ3D,UAAU,+CAEtB,yBAAQyB,QAAS,WAAKsC,EAAOJ,IAA7B,UACI,cAAC,IAAD,CAAsB3D,UAAU,0CAC9B2D,EAAKY,SAASD,iBCRjBE,EApBO,SAAC,GAA4F,IAAD,IAAzFC,aAAyF,MAAjF,GAAiF,MAA7Eb,iBAA6E,MAAjE,aAAiE,MAAvDC,cAAuD,MAAhD,aAAgD,MAAtCC,aAAsC,MAAhC,aAAgC,MAAtBC,cAAsB,MAAf,aAAe,EAE9G,OAAO,qBAAK/D,UAAU,uDAAf,SAECyE,EAAMtB,KACF,SAAAuB,GACI,OAAOA,GACP,cAAC,EAAD,CAEIf,KAAOe,EACPd,UAAYA,EACZC,OAASA,EACTC,MAAQA,EACRC,OAASA,GALHW,EAAEC,WCCjBC,EATC,SAAC,GAAiB,IAAfxC,EAAc,EAAdA,QACf,OACIA,GAAW,sBAAKpC,UAAU,uHAAf,UACP,sBAAMA,UAAU,yBAAhB,cAA2CoC,EAAQ7D,KAAK5B,SAAxD,OACA,oCAAOyF,EAAQC,YAAf,WC+BGwC,EAlCK,SAAC,GAA8C,IAA5ClB,EAA2C,EAA3CA,KAA2C,IAArCmB,iBAAqC,MAAzB,aAAyB,EAAfrB,EAAe,EAAfA,SAS/C,OADA7F,QAAQ0D,IAAIqC,GAER,sBAAK3D,UAAU,iDAAf,UACMyD,EACDE,EAAKY,SAASpB,KACX,SAAA4B,GACI,OAAOA,GAAK,cAAC,EAAD,CAAuB3C,QAAU2C,GAAlBA,EAAEJ,QAGrC,uBAAMK,SAfU,SAACrE,GACrBA,EAAEsE,iBACF,IAAM1H,EAAO,IAAI2H,SAASvE,EAAEC,QAE5BkE,EAAUnB,EAAMpG,EAAK4H,IAAI,iBAWcnF,UAAU,0EAA7C,UACI,uBAAOO,KAAK,cAAcP,UAAU,oHACyCS,KAAK,OAAOD,YAAY,+BACrG,wBAAQC,KAAK,SAAST,UAAU,+JAC5ByB,QAAU,WAAQqD,EAAUnB,IADhC,2BCZVyB,EAAW,CACbT,IAAK,EACLR,MAAO,GACP9B,YAAa,GACb4B,MAAO,KACPG,QAAQ,EACRiB,UAAW,KACX9G,KAAM,CAAE5B,SAAU,IAClB0H,MAAO,IAuLIiB,EApLE,WAEb,MAA+B5F,IAAvBjC,EAAR,EAAQA,MAAa6B,GAArB,EAAef,KAAf,EAAqBe,QACrB,EAA0ClB,mBAASgH,GAAnD,mBAAQG,EAAR,KAAsBC,EAAtB,KACA,EAAkCpH,mBAAS,IAA3C,mBAAQqH,EAAR,KAAkBC,EAAlB,KACA,EAA0BtH,mBAAS,IAAnC,mBAAQuH,EAAR,KAAcC,EAAd,KACA,EAAkCxH,mBAAS,IAA3C,mBAAQyH,EAAR,KAAkBC,EAAlB,KACA,EAAwC1H,oBAAS,GAAjD,mBAAQ2H,EAAR,KAAqBC,EAArB,KACA,EAAyB5H,mBAAS,GAAlC,mBAAQ0D,EAAR,KAAcmE,EAAd,KACA,EAA2C7H,mBAAS,GAApD,mBAAQoF,EAAR,KAAuB0C,EAAvB,KAEMjE,EAAS,uCAAG,WAAO0D,GAAP,SAAA9I,EAAA,sEACDsJ,QAAQC,IAAIT,EAAKxC,IAAL,uCAAS,WAAOkD,GAAP,SAAAxJ,EAAA,sEACjB8E,EAAaI,OAAOtE,EAAO4I,GADV,mFAAT,wDADX,mFAAH,sDAKf5H,oBAAS,sBAAE,4BAAA5B,EAAA,0DACJY,EADI,gCAQakE,EAAaC,OAAOnE,EAAO,GAAIqE,GAR5C,OAQCwE,EARD,OASHZ,EAAaY,GACb1I,QAAQ0D,IAAIgF,GAVT,2CAYR,CAAC7I,EAAOqE,IAEXrD,oBAAS,sBAAE,4BAAA5B,EAAA,0DACJY,EADI,gCAEekE,EAAaK,aAAavE,GAFzC,OAEG6I,EAFH,OAGHV,EAAQU,GAHL,2CAKR,CAAC7I,IAEJgB,oBAAS,sBAAE,4BAAA5B,EAAA,sEACOoF,EAAU0D,GADjB,OACHY,EADG,OAEPT,EAAYS,GACZ3I,QAAQ0D,IAAIuE,GAHL,2CAIR,CAACF,IAEJ,IAAM/B,EAAS,uCAAG,WAAOD,GAAP,SAAA9G,EAAA,sDAUd2I,EAAgB7B,GAChB/F,QAAQ0D,IAAIqC,GACZqC,GAAe,GACfpI,QAAQ0D,IAAIiE,GAbE,2CAAH,sDAiBTiB,EAAa,uCAAG,WAAO7C,EAAM8C,GAAb,eAAA5J,EAAA,6DAClBe,QAAQ0D,IAAI,cACZkE,EAAgB7B,GAChB/F,QAAQ0D,IAAIqC,GACZqC,GAAe,GAJG,SAMFrE,EAAaO,KAAKzE,EAAOkG,EAAKgB,KAN5B,oDAQWhD,EAAaI,OAAOtE,EAAOkG,EAAKgB,KAR3C,eAQR+B,EARQ,iBASaA,EAAWrC,MATxB,eASdkB,EAAalB,MATC,iBAUKqC,EAAWrC,MAVhB,eAUdV,EAAKU,MAVS,iBAWDqC,EAXC,QAWd/C,EAXc,OAYd6B,EAAgBkB,GAChB9I,QAAQ0D,IAAIqC,GAbE,wBAgBd/F,QAAQ0D,IAAI,qBAhBE,4CAAH,wDAmBbqF,EAAY,uCAAG,WAAOhD,GAAP,iBAAA9G,EAAA,6DACjBe,QAAQ0D,IAAIqC,GACZ6B,EAAgB7B,GAChBqC,GAAe,GACX1F,EAAKqD,EAAKgB,IAJG,SAKDhD,EAAaQ,IAAI1E,EAAO6C,GALvB,YAKbgG,EALa,qCAOb1I,QAPa,UAOK0I,EAPL,gCAOLhF,IAPK,0BASDK,EAAaK,aAAavE,GATzB,eASb6I,EATa,YAUbV,EAVa,UAUCU,EAVD,2DAab1I,QAAQ0D,IAAI,2BAbC,4CAAH,sDAgBZsF,EAAuB,SAACjD,GAC1B6B,EAAgB7B,GAChBuC,EAAiB,GACjBF,GAAe,IAGba,EAAgB,uCAAG,WAAOlD,EAAMtB,GAAb,iBAAAxF,EAAA,6DACrB2I,EAAgB7B,GAChB/F,QAAQ0D,IAAI,WACZ1D,QAAQ0D,IAAIqC,GACZ/F,QAAQ0D,IAAKe,GAJQ,SAKHV,EAAaS,QAAQ3E,EAAOkG,EAAKgB,IAAKtC,GALnC,cAKfiE,EALe,YASrB1I,QATqB,UASH0I,EATG,gCASbhF,IATa,0BAUXgF,EAVW,qDAWQ3E,EAAaI,OAAOtE,EAAOkG,EAAKgB,KAXxC,eAWX+B,EAXW,iBAYaA,EAAWnC,SAZxB,QAYjBgB,EAAahB,SAZI,OAajBiB,EAAgBkB,GAbC,wBAgBjB9I,QAAQ0D,IAAI,uBAhBK,4CAAH,wDAqBtB,OACI,sBAAKtB,UAAU,uGAAf,UAEI,sBAAKA,UAAU,yGAAf,UACI,wBAAQA,UAAU,8BAA8ByB,QAAS,WAAMyE,EAAiB,IAAhF,uBACA,wBAAQlG,UAAU,8BAA8ByB,QAAS,WAAMyE,EAAiB,IAAhF,2BACA,wBAAQlG,UAAU,8BAA8ByB,QAAS,WAAMnC,KAA/D,uBAGJ,eAAC,EAAD,CAAcU,UAAU,GAAGuD,SAAU,EAAGC,cAAeA,EAAvD,UAEI,sBAAKxD,UAAU,0CAAf,UACI,wBAAQA,UAAU,sDAAuDyB,QAAU,WAAWK,GAAMmE,EAAQnE,EAAO,IAAnH,SACI,cAAC,IAAD,CAAa9B,UAAU,eAE3B,wBAAQA,UAAU,sDAAuDyB,QAAU,WAAQwE,EAAQnE,EAAO,IAA1G,SACI,cAAC,IAAD,CAAc9B,UAAU,kBAIhC,cAAC,EAAD,CAAeyE,MAAQgB,EAAW7B,UAAYA,EACtCC,OAAS2C,EAAe1C,MAAQ6C,EAAc5C,OAAS6C,IAE/D,sBAAK5G,UAAU,qCAAf,UACI,wBAAQA,UAAU,sDAAuDyB,QAAU,WAAWK,GAAMmE,EAAQnE,EAAO,IAAnH,SACI,cAAC,IAAD,CAAa9B,UAAU,eAE3B,wBAAQA,UAAU,sDAAuDyB,QAAU,WAAQwE,EAAQnE,EAAO,IAA1G,SACI,cAAC,IAAD,CAAc9B,UAAU,qBAKpC,cAAC,EAAD,CAAcA,UAAU,GAAGuD,SAAU,EAAGC,cAAeA,EAAvD,SAEI,cAAC,EAAD,CAAeiB,MAAQoB,EAAWjC,UAAYA,EAC1CC,OAAS2C,EAAe1C,MAAQ6C,EAAc5C,OAAS6C,MAG/D,cAAC,EAAD,CAAc5G,UAAU,GAAGuD,SAAU,EAAGC,cAAeA,EAAvD,SACI,cAAC,EAAD,CAAaG,KAAM4B,EAAcT,UAAW+B,EAA5C,SACI,cAAC,EAAD,CAAMlD,KAAO4B,EAAe3B,UAAYA,EACpCC,OAAS2C,EAAe1C,MAAQ6C,EAAc5C,OAAS6C,QAIjEb,GAAe,cAAC,EAAD,CAASxD,QAAS,CAC/B,CAAExC,KAAM,WAAYsD,OAAQ,kBAAMmD,EAAcjB,KAChD,CAAExF,KAAM,WAAYsD,OAAQ,kBAAMsD,EAAapB,KAC/C,CAAExF,KAAM,kBAAmBsD,OAAQ,kBAAMuD,EAAqBrB,KAC9D,CAAExF,KAAM,WAAYsD,OAAQ,WAAQ2C,GAAe,MAEnDxD,eApHQ,WAAQwD,GAAe,U,QChFzCxJ,EAAW,4CAeXsK,EAAgB,CAElB1B,SAAU,CACNT,IAAK,EACLR,MAAO,GACP9B,YAAa,GACb4B,MAAO,KACPG,QAAQ,EACRiB,UAAW,KACX9G,KAAM,CAAE5B,SAAU,IAClB0H,MAAO,IAGX0C,WAAW,WAAD,4BAAE,WAAOtJ,EAAO0G,EAAO9B,EAAa4B,GAAlC,mBAAApH,EAAA,sEAEEa,EAAS,CACXX,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBW,cAAc,UAAD,OAAYF,IAE7BR,KAAMC,KAAKC,UAAU,CACjBgH,MAAOA,EACP9B,YAAaA,EACb4B,MAAOA,KAXX,SAemBnH,MAAM,GAAD,OAAIN,EAAJ,gBAA4BkB,GAfpD,YAeEN,EAfF,QAiBSC,GAjBT,iCAkBmBD,EAASE,OAlB5B,cAkBMC,EAlBN,yBAmBOA,GAnBP,iEAsBJK,QAAQC,MAAR,MAtBI,kBAuBG,IAvBH,0DAAF,yDAAC,GA2BXmJ,UAAU,WAAD,4BAAE,WAAOvJ,GAAP,mBAAAZ,EAAA,sEAEGa,EAAS,CACXX,OAAQ,MACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KAL9B,SASoBX,MAAM,GAAD,OAAIN,EAAJ,eAA2BkB,GATpD,YASGN,EATH,QAWUC,GAXV,iCAYoBD,EAASE,OAZ7B,cAYOC,EAZP,yBAaQA,EAAKA,MAbb,iEAgBHK,QAAQC,MAAR,MAhBG,kBAiBI,IAjBJ,0DAAF,mDAAC,GAqBV6I,WAAW,WAAD,4BAAE,WAAOjJ,EAAO6C,EAAI6D,EAAO9B,EAAa4B,GAAtC,mBAAApH,EAAA,sEAEEa,EAAS,CACXX,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBW,cAAc,UAAD,OAAYF,IAE7BR,KAAMC,KAAKC,UAAU,CACjBgH,MAAOA,EACP9B,YAAaA,EACb4B,MAAOA,KAXX,SAemBnH,MAAM,GAAD,OAAIN,EAAJ,wBAA4B8D,GAAM5C,GAf1D,YAeEN,EAfF,QAiBSC,GAjBT,iCAkBmBD,EAASE,OAlB5B,cAkBMC,EAlBN,yBAmBOA,GAnBP,iEAsBJK,QAAQC,MAAR,MAtBI,kBAuBG,IAvBH,0DAAF,2DAAC,GA2BXoJ,aAAa,WAAD,4BAAE,WAAOxJ,EAAO6C,GAAd,mBAAAzD,EAAA,sEAEAa,EAAS,CACXX,OAAQ,QACRC,QAAS,CACLW,cAAc,UAAD,OAAYF,KAL3B,SASiBX,MAAM,GAAD,OAAIN,EAAJ,wBAA4B8D,GAAM5C,GATxD,YASAN,EATA,QAWOC,GAXP,iCAYiBD,EAASE,OAZ1B,cAYIC,EAZJ,yBAaKA,GAbL,iEAgBNK,QAAQC,MAAR,MAhBM,kBAiBC,IAjBD,0DAAF,qDAAC,IAuBFiJ,ICvEAI,EAlDE,SAAC,GAA6E,IAA1ElC,EAAyE,EAAzEA,SAAyE,IAA/DmC,cAA+D,MAAxD,GAAwD,MAApDC,iBAAoD,MAA1C,GAA0C,MAAtCC,uBAAsC,MAAtB,GAAsB,MAAlBC,eAAkB,MAAV,GAAU,EAC1F,EAAsBlJ,mBAASkJ,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA2BpJ,mBAAS,IAApC,mBAAQP,EAAR,KAAeuD,EAAf,KAoBA,OACI,uBAAM4D,SAfc,SAACrE,GACrBA,EAAEsE,iBACF,IAAM1H,EAAO,IAAI2H,SAASvE,EAAEC,QAEzBrD,EAAK4H,IAAI,UAAY5H,EAAK4H,IAAI,gBAAkB5H,EAAK4H,IAAI,SACpD5H,EAAK4H,IAAI,SAASb,QAAU,GAAK/G,EAAK4H,IAAI,eAAeb,QAAU,EACnEU,EAASzH,GAET6D,EAAS,8CAGbA,EAAS,0BAIsBpB,UAAU,4FAA7C,UACI,uBAAOA,UAAU,0BAA0BO,KAAK,SAAShB,MAAO4H,EAAQ1G,KAAK,WAC7E,qBAAKT,UAAW,+BAA+BgE,IAAMuD,IACnD1J,GAAS,mBAAGmC,UAAU,sEAAb,SACEnC,IAEb,uBAAOmC,UAAU,6DAAjB,oBAGA,uBAAOA,UAAU,yEAAyEO,KAAK,QAAQkH,aAAcL,EAAW3G,KAAK,SACrI,uBAAOT,UAAU,4DAAjB,yBAGA,uBAAOA,UAAU,2EAC+BO,KAAK,cAAcE,KAAK,OAAOgH,aAAcJ,IAC7F,uBAAOrH,UAAU,4DAAjB,oBAGA,uBAAOA,UAAU,2EAC+BO,KAAK,QAAQE,KAAK,OAAOgH,aAAcH,EAAS5G,SAAW,SAAAC,GAAC,OAtC5F,SAACA,EAAG+G,GACxBA,EAAK/G,EAAEC,OAAOrB,OAqCsGoI,CAAgBhH,EAAG6G,MACnI,wBAAQxH,UAAU,6GAA6GS,KAAK,SAApI,yBCnCN2E,EAAW,CACbT,IAAK,EACLR,MAAO,GACP9B,YAAa,GACb4B,MAAO,KACPG,QAAQ,EACRiB,UAAW,KACX9G,KAAM,CAAE5B,SAAU,IAClB0H,MAAO,IAgLIuD,EA7KG,WAEd,MAAgClI,IAAxBjC,EAAR,EAAQA,MAAa6B,GAArB,EAAef,KAAf,EAAqBe,QACrB,EAA4BlB,mBAAS,IAArC,mBAAQqG,EAAR,KAAeoD,EAAf,KACA,EAAwCzJ,oBAAS,GAAjD,mBAAQ2H,EAAR,KAAqBC,EAArB,KACA,EAA4C5H,mBAAS,GAArD,mBAAQoF,EAAR,KAAuB0C,EAAvB,KACA,EAA0C9H,mBAASgH,GAAnD,mBAAQG,EAAR,KAAsBC,EAAtB,KAEA/G,oBAAS,sBAAE,4BAAA5B,EAAA,0DACJY,EADI,gCAEaqJ,EAAcE,UAAUvJ,GAFrC,OAEC6I,EAFD,OAGHuB,EAASvB,GACT1I,QAAQ0D,IAAImD,GAJT,2CAMR,CAAChH,IAEJ,IAAMqK,EAAe,uCAAE,WAAOC,GAAP,eAAAlL,EAAA,sEACDiK,EAAcC,WAC5BtJ,EACAsK,EAAS5C,IAAI,SACb4C,EAAS5C,IAAI,eACb4C,EAAS5C,IAAI,UALE,YACbmB,EADa,wCAOCQ,EAAcE,UAAUvJ,GAPzB,0BAQXoK,EAASvB,GACTJ,EAAiB,GATN,2CAAF,sDAcf8B,EAAe,uCAAE,WAAOD,GAAP,eAAAlL,EAAA,6DACnBe,QAAQ0D,IAAIyG,EAAS5C,IAAI,WADN,SAED2B,EAAcJ,WAC5BjJ,EACAsK,EAAS5C,IAAI,UACb4C,EAAS5C,IAAI,SACb4C,EAAS5C,IAAI,eACb4C,EAAS5C,IAAI,UAPE,YAEbmB,EAFa,qCAUX1I,QAVW,SAUO0I,EAVP,wBAUHhF,IAVG,gBAWXiE,EAAapB,MAAQ4D,EAAS5C,IAAI,SAClCI,EAAalD,YAAc0F,EAAS5C,IAAI,eACxCI,EAAatB,MAAQ8D,EAAS5C,IAAI,SAClCe,EAAiB,GAdN,wBAgBXtI,QAAQ0D,IAAI,qBAhBD,4CAAF,sDAmBf2G,EAAqB,uCAAG,4BAAApL,EAAA,sEACViK,EAAcG,aAAaxJ,EAAO8H,EAAaZ,KADrC,YACtB2B,EADsB,gCAGtBf,EAAanB,QAAUmB,EAAanB,OAHd,KAItBxG,QAJsB,SAIJ0I,EAJI,wBAIdhF,IAJc,wCAMtB1D,QAAQ0D,IAAI,uBANU,QAQ1B0E,GAAe,GARW,4CAAH,qDAWrBkC,EAAmB,uCAAG,WAAOvE,GAAP,SAAA9G,EAAA,sDACxBmJ,GAAe,GACfE,EAAiB,GAFO,2CAAH,sDAKnBM,EAAa,uCAAG,WAAO7C,EAAM8C,GAAb,eAAA5J,EAAA,6DAClBe,QAAQ0D,IAAI,cACZkE,EAAgB7B,GAChB/F,QAAQ0D,IAAIqC,GACZqC,GAAe,GAJG,SAMFrE,EAAaO,KAAKzE,EAAOkG,EAAKgB,KAN5B,oDAQWhD,EAAaI,OAAOtE,EAAOkG,EAAKgB,KAR3C,eAQR+B,EARQ,iBASaA,EAAWrC,MATxB,eASdkB,EAAalB,MATC,iBAUKqC,EAAWrC,MAVhB,eAUdV,EAAKU,MAVS,iBAWDqC,EAXC,QAWd/C,EAXc,OAYd6B,EAAgBkB,GAChB9I,QAAQ0D,IAAIqC,GAbE,wBAgBd/F,QAAQ0D,IAAI,qBAhBE,4CAAH,wDAmBbsF,EAAuB,SAACjD,GAC1B6B,EAAgB7B,GAChBuC,EAAiB,GACjBF,GAAe,IAGba,EAAgB,uCAAG,WAAOlD,EAAMtB,GAAb,iBAAAxF,EAAA,6DACrB2I,EAAgB7B,GAChB/F,QAAQ0D,IAAI,WACZ1D,QAAQ0D,IAAIqC,GACZ/F,QAAQ0D,IAAKe,GAJQ,SAKHV,EAAaS,QAAQ3E,EAAOkG,EAAKgB,IAAKtC,GALnC,cAKfiE,EALe,YASrB1I,QATqB,UASH0I,EATG,gCASbhF,IATa,0BAUXgF,EAVW,qDAWQ3E,EAAaI,OAAOtE,EAAOkG,EAAKgB,KAXxC,eAWX+B,EAXW,iBAYaA,EAAWnC,SAZxB,QAYjBgB,EAAahB,SAZI,OAajBiB,EAAgBkB,GAbC,wBAgBjB9I,QAAQ0D,IAAI,uBAhBK,4CAAH,wDAoBhBsC,EAAS,uCAAG,WAAOD,GAAP,SAAA9G,EAAA,sDACd2I,EAAgB7B,GAChBqC,GAAe,GAFD,2CAAH,sDASf,OACI,sBAAKhG,UAAU,wGAAf,UAEI,sBAAKA,UAAU,yGAAf,UACI,wBAAQA,UAAU,8BAA8ByB,QAAS,WAAMyE,EAAiB,IAAhF,0BACA,wBAAQlG,UAAU,8BAA8ByB,QAAS,WAAMyE,EAAiB,IAAhF,kCACA,wBAAQlG,UAAU,8BAA8ByB,QAAS,WAAMnC,KAA/D,uBAGJ,cAAC,EAAD,CAAciE,SAAU,EAAGC,cAAeA,EAA1C,SAEI,cAAC,EAAD,CAAeiB,MAAQA,EAAQb,UAAYA,EACnCC,OAAS2C,EAAezC,OAAS6C,MAI7C,eAAC,EAAD,CAAc5G,UAAU,oEAAoEuD,SAAU,EAAGC,cAAeA,EAAxH,UACI,wBAAQxD,UAAU,kFAAmFyB,QAAU,WAAOyE,EAAiB,IAAvI,SACI,cAAC,IAAD,CAAalG,UAAU,eAE3B,cAAC,EAAD,CAAUgF,SAAW8C,OAGzB,eAAC,EAAD,CAAc9H,UAAU,mEAAmEuD,SAAU,EAAGC,cAAeA,EAAvH,UACI,wBAAQxD,UAAU,kFAAkFyB,QAAU,WAAOyE,EAAiB,IAAtI,SACI,cAAC,IAAD,CAAalG,UAAU,cAE3B,cAAC,EAAD,CAAUgF,SAAWgD,EACjBb,OAAQ5B,EAAaZ,IACrByC,UAAW7B,EAAapB,MACxBkD,gBAAiB9B,EAAalD,YAC9BiF,QAAS/B,EAAatB,WAG9B,cAAC,EAAD,CAAcjE,UAAU,GAAGuD,SAAU,EAAGC,cAAeA,EAAvD,SACI,cAAC,EAAD,CAAaG,KAAM4B,EAAcT,UAAW+B,EAA5C,SACI,cAAC,EAAD,CAAMlD,KAAO4B,EAAe3B,UAAYA,EACpCC,OAAS2C,EAAezC,OAAS6C,QAI3Cb,GAAe,cAAC,EAAD,CAASxD,QAAS,CAC/B,CAAExC,KAAM,SAAUsD,OAAQ6E,GAC1B,CAAEnI,KA7CkBwF,EAAanB,OAAS,eAAiB,eA6CtCf,OAAQ4E,GAC7B,CAAElI,KAAM,kBAAmBsD,OAAQ,kBAAMuD,EAAqBrB,KAC9D,CAAExF,KAAM,WAAYsD,OAAQ,WAAQ2C,GAAe,MAEnDxD,eAnDQ,WAAQwD,GAAe,U,OC/HhCmC,EATM,SAAC,GAA8B,IAAD,IAA5BrJ,YAA4B,MAAvB,OAAuB,EAAf2E,EAAe,EAAfA,SAClC,EAAwB/D,IAAhBjC,EAAR,EAAQA,MAAOc,EAAf,EAAeA,KAEf,OAAId,EACAc,GAAQA,EAAKO,OAASA,EAEnB2E,EAFgC,cAAC,IAAD,CAAUlC,SAAO,EAACC,GAAG,SAD1C,cAAC,IAAD,CAAUD,SAAO,EAACC,GAAG,+BCgB1B4G,MAbf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,4BAA4BC,QAAS,cAAC,EAAD,MACjD,cAAC,IAAD,CAAOD,KAAK,4BAA6BC,QAAS,cAAC,EAAD,CAAcxJ,KAAK,QAAnB,SAA2B,cAAC,EAAD,QAC7E,cAAC,IAAD,CAAOuJ,KAAK,2BAA6BC,QAAS,eAAC,EAAD,CAAcxJ,KAAK,OAAnB,cAA2B,cAAC,EAAD,IAA3B,SAClD,cAAC,IAAD,CAAOuJ,KAAK,IAAIC,QAAS,cAAC,EAAD,YCJlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJnG,SAASoG,eAAe,SAM1BZ,M","file":"static/js/main.6b14600b.chunk.js","sourcesContent":["const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\nconst sessionServices = {};\r\n\r\nsessionServices.login = async (username, password) => {\r\n    const response = await fetch(`${BASE_URL}/auth/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n\r\n    return {};\r\n}\r\n\r\nsessionServices.verifyToken = async (token) => {\r\n    try{\r\n        const config = {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        };\r\n      \r\n        const response = await fetch(`${BASE_URL}/auth/whoami`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data;\r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nexport default sessionServices;","import React, {useCallback, useMemo, useEffect, useState} from \"react\";\r\nimport sessionServices from \"../Services/session.services.js\"\r\n\r\nconst SessionContext = React.createContext();\r\nconst TOKEN_KEY = \"token\";\r\n\r\nexport const SessionProvider = (props) => {\r\n    const [token, setToken] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        const verifyToken = async () => {\r\n            const tokenLS = localStorage.getItem(TOKEN_KEY);\r\n\r\n            \r\n            if(tokenLS) {\r\n                const rest = await sessionServices.verifyToken(tokenLS);\r\n                if(rest){\r\n                    const {username, role} = rest\r\n\r\n                    if(username && role) {\r\n                        setUser({ username, role});\r\n                        setTokenAll(tokenLS);\r\n                    }\r\n                }\r\n                \r\n                \r\n\r\n                \r\n            }\r\n        };\r\n\r\n        verifyToken();\r\n    }, [token])\r\n\r\n\r\n    const setTokenAll = (newToken) => {\r\n        localStorage.setItem(TOKEN_KEY, newToken);\r\n        setToken(newToken);\r\n    }\r\n\r\n    const login = useCallback((username, password)=> {\r\n        const loginAsync = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenRes } = await sessionServices.login(username, password);\r\n\r\n                if(tokenRes) {\r\n                    setTokenAll(tokenRes);\r\n                    status = true;\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"Error in login\");\r\n            } finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return loginAsync();\r\n    }, [])\r\n    \r\n    const logout = useCallback(() => {\r\n        setUser(undefined);\r\n        setTokenAll(\"\");\r\n    }, [])\r\n\r\n    const value = useMemo( () => ({\r\n        token: token,\r\n        user: user,\r\n        login: login,\r\n        logout: logout\r\n    }), [token, user])\r\n\r\n    return <SessionContext.Provider value = {value} {...props}/>\r\n}\r\n\r\nexport const useSessionContext = () => {\r\n    const context = React.useContext(SessionContext);\r\n\r\n    if(!context){\r\n        throw new Error(\"Ha ocurrido un error\");\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem(TOKEN_KEY);","import React from 'react';\r\n\r\nconst Title = ({ text }) => {\r\n   \r\n    return(\r\n        <div className=\"mt-3 text-2xl  font-mono text-center\" >\r\n        <label className='title-label'>{text}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst Label =({text}) => {\r\n    return (\r\n        <div className=\" mt-3 block font-mono md:font-Cambria text-xl text-center\">\r\n            <label>{text}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Label;","import React from 'react';\r\n\r\nconst Input = ({attribute, handleChange, param}) =>{\r\n    return(\r\n        <div className=\"border px-3 py-5 mt- rounded-md hover:outline-none focus:outline-none text-center\">\r\n            <input \r\n            id={attribute.id}\r\n            name={attribute.name}\r\n            placeholder={attribute.placeholder}\r\n            type={attribute.type}\r\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n            className='regular-style px-3 py-3'/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Input;","import React, {useEffect, useState} from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSessionContext } from \"../../Contexts/SessionContext.js\";\r\nimport Title from '../../Components/Title/Title';\r\nimport Label from '../../Components/Label/Label';\r\nimport Input from '../../Components/Input/Input';\r\n\r\nconst rolePages = {\r\n    \"admin\": \"/Proyecto-Final-Web/admin\",\r\n    \"user\": \"/Proyecto-Final-Web/user\",\r\n  }\r\n\r\nconst Login = () => {\r\n    const [localUser, setLocalUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const {login, user} = useSessionContext();\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState(false);\r\n    const onChange = (e, save) => {\r\n        save(e.target.value);}\r\n  \r\n    useEffect( () => {\r\n        if(user) {\r\n            navigate(rolePages[user.role] ?? \"/\")\r\n        }\r\n    }, [user])\r\n\r\n    function handleChange(name, value){\r\n        if(name === 'usuario'){\r\n        setLocalUser(value)\r\n        } else {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    async function handleSubmit(){\r\n        const logged = await login(localUser, password)\r\n        if(logged){\r\n            console.log(\"logueado\");\r\n            setError(false);\r\n            return <Navigate replace to=\r\n            {rolePages[localUser.role] ?? \"/\"}/>\r\n        } else \r\n            setError(!logged);\r\n    }\r\n\r\n    return(\r\n        <div className=\" min-h-screen items-center  bg-gray-200 py-3 flex flex-col justify-center\">\r\n            <div className= \"bg-white border-solid border-2 border-black flex flex-col justify-center rounded-md\">\r\n            <Title text='¡BIENVENIDO!'/>\r\n            {error && <p className=\" mt-3 rounded-md p-2 text-center text-black  bg-red-300 select-none\">\r\n                        Un error ha ocurrido en el inicio de sesión\r\n                        ingrese sus datos validos porfavor.\r\n                    </p>}\r\n                 \r\n            <Label text='Usuario'/>\r\n            <Input \r\n            attribute={{\r\n                id: 'usuario',\r\n                name: 'usuario',\r\n                type: 'text',\r\n                placeholder: 'Ingrese su usuario'\r\n            }}\r\n            handleChange={handleChange}\r\n            />\r\n            <Label text='Contraseña'/>\r\n            <Input \r\n            attribute={{\r\n                id: 'contraseña',\r\n                name: 'contraseña',\r\n                type: 'password',\r\n                placeholder: 'Ingrese su contraseña'\r\n            \r\n            }}\r\n            handleChange={handleChange}\r\n                />\r\n            \r\n            <button className=\"mt-5 bg-blue-400 text-white py-2 px-2 rounded-md hover:bg-blue-600 font-mono md:font-Cambria\r\n            text-2xl\" onClick = {handleSubmit}>\r\n                Ingresar\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import { AiOutlineCloud } from \"react-icons/ai\";\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst NotFound = () => \r\n{\r\n    const navigate = useNavigate()\r\n    const onClick = (e) => {\r\n        navigate('/Login')\r\n        console.log(\"si da click\");\r\n    }\r\n  \r\n    return(\r\n        <div className=\"flex flex-col justify-center items-center w-screen h-screen bg-gray-400\">\r\n            <AiOutlineCloud className=\"text-8xl m-4\"/>\r\n            <h2 className=\"text-6xl font-roboto text-center mb-6\">404</h2>\r\n            <h3 className=\"text-xl font-roboto text-center\">Pagina prohibida.</h3>\r\n            <p className=\"text-lg font-roboto text-center\">No eres digno de acceder a esta pagina.</p>\r\n            <button className=\"font-roboto bg-gray-600 m-4 py-2 px-4 rounded\" onClick={(e) => onClick(e)}>Go to Login</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\nconst userServices = {};\r\n\r\nuserServices.getAll = async (token, limit=10, page=0) => {\r\n    try{\r\n        const config = { \r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/all?limit=${limit}&page=${page}`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data.data; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n}\r\n\r\nuserServices.getOne = async (token, id) => {\r\n    try{\r\n        const config = { \r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/one/${id}`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nuserServices.getFavorites = async (token) => {\r\n    try{\r\n        const config = { \r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/fav`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data.favorites; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\n\r\nuserServices.like = async (token, id) => {\r\n    try{\r\n        const config = { \r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/like/${id}`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\n\r\nuserServices.fav = async (token, id) => {\r\n    try{\r\n        const config = { \r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/fav/${id}`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nuserServices.comment = async (token, id, description) => {\r\n    try{\r\n        const config = { \r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                description: description\r\n            })\r\n        };\r\n        \r\n        const response = await fetch(`${BASE_URL}/post/comment/${id}`, config);\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data; \r\n        };\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nexport default userServices;","import { useEffect, useState, useRef } from \"react\";\r\n\r\nconst Options = ( { options, onClickOutside=() => {}} ) => {\r\n\r\n    let i = 0;\r\n    const myRef = useRef();\r\n\r\n    const handleClickOutside = e => {\r\n        if (!myRef.current.contains(e.target)) {\r\n            onClickOutside();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    });\r\n\r\n    return (\r\n    <div ref={ myRef } className={`fixed bg-blue-500 bottom-0 w-full flex flex-col items-center bg-green-500 text-white`}>\r\n        {\r\n            options.map(\r\n            option  =>  {\r\n                return <button className=\"w-full text-xl hover:bg-blue-700\" key={i++} onClick={ option.action}> { option.text } </button>\r\n                }\r\n            )\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Options;","const TabContainer = ( {className=\"\", tabIndex, tabController, children} ) => {\r\n    return (\r\n        (tabIndex === tabController) &&\r\n            <div className={className}>\r\n                { children}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TabContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { IoIosHeart } from \"react-icons/all\";\r\nimport { IoChatbubbleEllipses } from \"react-icons/all\";\r\nimport { FaStar } from \"react-icons/all\";\r\nimport { BsThreeDotsVertical } from \"react-icons/all\";\r\n\r\nconst Post = ( { post, onOptions=() => {}, onLike=() => {}, onFav=() => {}, onChat=() => {}} ) => {\r\n\r\n    return (\r\n    <div className=\"font-serif w-80  max-w-full bg-white border-solid border-2 border-black rounded-md mt-3 sm:w-96  flex flex-col items-center\">\r\n        <div className=\"w-full flex  py-2 px-3 justify-between\"> \r\n            <span className=\"text-blue-500 text-2xl \">{post.user.username} </span>\r\n            <button onClick={ () => { onOptions(post) }} >\r\n                <BsThreeDotsVertical className=\"self-start text-2xl\" />\r\n            </button>\r\n        </div>\r\n        <img className=\" rounded-2xl h-52 w-72 \"src= {`${post.image}`} alt=\"Post\" />\r\n        <b> {post.title} </b>\r\n        <div> {post.description} </div>\r\n        <div> Activo{`: ${post.active ? \"Si\": \"No\"}`} </div>\r\n        <div className= \"items-start flex justify-evenly w-full h-20 \">\r\n            <button onClick={()=>{onLike(post)}}>\r\n                <IoIosHeart className={`self-start text-2xl m-1 text-red-600`}/>\r\n                { post.likes.length }\r\n            </button>\r\n            <button onClick={()=>{onFav(post)}}>\r\n                <FaStar className=\"self-start text-2xl m-1 text-yellow-600 \" />\r\n            </button>\r\n            <button onClick={()=>{onChat(post)}}>\r\n                <IoChatbubbleEllipses className=\"self-start text-2xl m-1 text-blue-800\"/>\r\n                { post.comments.length}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import Post from \"../Post/Post.jsx\"\r\n\r\nconst PostContainer = ({ posts = [], onOptions = () => {}, onLike=() => {}, onFav=() => {}, onChat=() => {} }) => {\r\n    \r\n    return <div className=\"w-full h-full flex flex-col items-center bg-gray-300\">\r\n        {\r\n            posts.map(\r\n                p  =>  {\r\n                    return p && \r\n                    <Post\r\n                        key={ p._id }\r\n                        post={ p }\r\n                        onOptions={ onOptions}\r\n                        onLike={ onLike}\r\n                        onFav={ onFav}\r\n                        onChat={ onChat}\r\n                    /> \r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default PostContainer;","import React from \"react\";\r\n\r\nconst Comment = ({ comment }) => {\r\n    return (\r\n        comment && <div className=\"font-serif  bg-gray-200 border-solid border-2 border-black rounded-md mt-3  w-72 sm:w-96  flex flex-col items-center\">\r\n            <div  className=\"text-blue-500 text-xl \"> {comment.user.username} </div>\r\n            <div> {comment.description} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React from \"react\";\r\nimport Comment from \"../Comment/Comment.jsx\"\r\n\r\nconst CommentView = ( {post, onComment = () => {}, children} ) => {\r\n    \r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        \r\n        onComment(post, data.get(\"description\") );\r\n    }\r\n    console.log(post)\r\n    return (\r\n        <div className=\"w-full h-full flex flex-col items-center pb-12\">\r\n            { children}\r\n            {post.comments.map(\r\n                c  =>  {\r\n                    return c && <Comment key={ c._id } comment={ c }/> \r\n            })}\r\n\r\n            <form onSubmit={ onSubmitHandler } className=\"fixed bottom-0 flex items-center w-full sm:w-4/5 justify-center text-xl\">\r\n                <input name=\"description\" className='regular-style px-2 py-1 w-full sm:w-4/5\r\n                    border-solid border-t-2 border-l-2 border-b-2 border-black rounded-l-md' type=\"text\" placeholder=\"Añade un Comentario ...\"/>\r\n                <button type=\"submit\" className=\"bg-blue-400 text-white border-solid border-black border-t-2 border-r-2 border-b-2 py-1 px-2 rounded-r-md hover:bg-pink-200 font-mono md:font-Cambria text-xl\"\r\n                    onClick={ () => { onComment(post)}}>\r\n                    Enviar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n/*\r\n{post.comments.map(\r\n                c  =>  {\r\n                    return c && <Comment key={ c._id } comment={ c }/> \r\n            })}\r\n*/\r\nexport default CommentView;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\nimport { useSessionContext } from \"../../Contexts/SessionContext.js\";\r\nimport userServices from \"../../Services/user.services.js\";\r\nimport Options from \"../../Components/Options/Options.jsx\";\r\nimport TabContainer from \"../../Components/TabContainer/TabContainer.jsx\";\r\nimport PostContainer from \"../../Components/PostContainer/PostContainer.jsx\";\r\nimport CommentView from \"../../Components/CommentView/CommentView.jsx\";\r\nimport Post from \"../../Components/Post/Post.jsx\";\r\n\r\nconst nullPost = {\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    image: null,\r\n    active: false,\r\n    createdAt: null,\r\n    user: { username: \"\"},\r\n    likes: []\r\n};\r\n\r\nconst UserPage = () => {\r\n    \r\n    const { token, user, logout} = useSessionContext();\r\n    const [ selectedPost, setSelectedPost ] = useState(nullPost);\r\n    const [ allPosts, setAllPosts ] = useState([]);\r\n    const [ favs, setFavs ] = useState([]);\r\n    const [ favPosts, setFavPosts ] = useState([]);\r\n    const [ showOptions, setShowOptions ] = useState(false);  \r\n    const [ page, setPage] = useState(0);  \r\n    const [ tabController, setTabController] = useState(0);\r\n\r\n    const favorites = async (favs) => {\r\n        return await Promise.all(favs.map(async (fId) => {\r\n            return await userServices.getOne(token, fId)})\r\n        );\r\n    }\r\n    useEffect( async () => {\r\n        if(token) { //61a413c6f81b159c2fa9dd80\r\n            //console.log(await userServices.like(token,   \"61a414c9f81b159c2faa38b0\"));\r\n            //console.log(await userServices.fav(token,    \"61a414c9f81b159c2faa38b0\"));\r\n            //console.log(await userServices.getOne(token, \"61a414c9f81b159c2faa38b0\"));\r\n            //console.log(await userServices.comment(token,\"61a414c9f81b159c2faa38b0\", \"Buen post\"));\r\n            //const f = await Promise.all(favs.map(async (fId) => { return await userServices.getOne(token, fId) }));\r\n            //console.log(f);\r\n            let res = await userServices.getAll(token, 10, page);\r\n            setAllPosts( res);\r\n            console.log(res);\r\n        }\r\n    }, [token, page])\r\n\r\n    useEffect( async () => {\r\n        if(token) {\r\n            const res = await userServices.getFavorites(token);\r\n            setFavs(res);\r\n        }\r\n    }, [token])\r\n\r\n    useEffect( async () => {\r\n        let u = await favorites(favs);\r\n        setFavPosts(u)\r\n        console.log(favPosts);\r\n    }, [favs])\r\n\r\n    const onOptions = async (post) => {\r\n        /*new Promise((resolve, reject)=>{\r\n            setSelectedPost(post);\r\n            resolve();\r\n        })\r\n        .then( res=> {\r\n        console.log(\"Jojos life\");\r\n        console.log(\"Espero funcione\" );\r\n        console.log(selectedPost.active);\r\n        setShowOptions(true);})*/\r\n        setSelectedPost(post);\r\n        console.log(post);\r\n        setShowOptions(true);\r\n        console.log(selectedPost);\r\n    }\r\n    const hideOptions = () => { setShowOptions(false)};\r\n    \r\n    const onLikeHandler = async (post, set) => {\r\n        console.log(\"Dando like\");\r\n        setSelectedPost(post);\r\n        console.log(post);\r\n        setShowOptions(false);\r\n\r\n        let res = await userServices.like(token, post._id);\r\n        if( res) {\r\n            const updatePost = await userServices.getOne(token, post._id);\r\n            selectedPost.likes = await updatePost.likes;\r\n            post.likes = await updatePost.likes;\r\n            post = await updatePost;\r\n            setSelectedPost(updatePost);\r\n            console.log(post);\r\n        }\r\n        else\r\n            console.log(\"No se pudo likear\");\r\n    }\r\n\r\n    const onFavHandler = async (post) => {\r\n        console.log(post);\r\n        setSelectedPost(post);\r\n        setShowOptions(false);\r\n        let id = post._id;\r\n        let res = await userServices.fav(token, id);\r\n        if(res) {\r\n            console.log(await res);\r\n\r\n            res = await userServices.getFavorites(token);\r\n            setFavs(await res)\r\n        }\r\n        else\r\n            console.log(\"No se pudo dar favorito\");\r\n    }\r\n\r\n    const onSeeCommentsHandler = (post) => {\r\n        setSelectedPost(post);\r\n        setTabController(2);\r\n        setShowOptions(false);\r\n    }\r\n\r\n    const onCommentHandler = async (post, description) => {\r\n        setSelectedPost(post);\r\n        console.log(\"comment\");\r\n        console.log(post);\r\n        console.log( description); \r\n        const res = await userServices.comment(token, post._id, description);\r\n        //console.log(await userServices.getOne(token, \"61a414c9f81b159c2faa38b0\"))\r\n        //selectedPost.comments.push({ _id: , user: { username: user.username}, description: description});\r\n        \r\n        console.log(await res);\r\n        if( await res) {\r\n            const updatePost = await userServices.getOne(token, post._id);\r\n            selectedPost.comments = await updatePost.comments;\r\n            setSelectedPost(updatePost)\r\n        }\r\n        else\r\n            console.log(\"No se pudo comentar\");\r\n    }\r\n    /*\r\n                \r\n    */\r\n    return (\r\n        <div className=\"min-h-screen text-center flex flex-col font-mono md:font-Cambria  w-full bg-gray-300 h-full relative\">\r\n            \r\n            <div className=\"w-full flex flex-wrap justify-around mx-auto bg-blue-500 text-white py-2 px-3 md:font-Cambria text-xl \">\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ setTabController(0)}}>Ver todos</button>\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ setTabController(1)}}>Ver favoritos</button>\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ logout()}}>Logout</button>\r\n            </div>\r\n            \r\n            <TabContainer className=\"\" tabIndex={0} tabController={tabController}>\r\n\r\n                <div className=\"w-4/5 flex justify-between mx-auto mt-4\">\r\n                    <button className=\"text-gray-400 self text-lg hover:text-gray-700 mb-2\"  onClick={ () => { if(page) setPage(page - 1)}}>\r\n                        <FaArrowLeft className=\" text-xl\"/>\r\n                    </button>\r\n                    <button className=\"text-gray-400 self text-lg hover:text-gray-700 mb-2\"  onClick={ () => { setPage(page + 1)}}>\r\n                        <FaArrowRight className=\" text-xl\"/>\r\n                    </button>\r\n                </div>\r\n\r\n                <PostContainer posts={ allPosts } onOptions={ onOptions}\r\n                        onLike={ onLikeHandler} onFav={ onFavHandler} onChat={ onSeeCommentsHandler}/>\r\n\r\n                <div className=\"w-4/5 flex justify-between mx-auto\">\r\n                    <button className=\"text-gray-400 self text-lg hover:text-gray-700 mb-2\"  onClick={ () => { if(page) setPage(page - 1)}}>\r\n                        <FaArrowLeft className=\" text-xl\"/>\r\n                    </button>\r\n                    <button className=\"text-gray-400 self text-lg hover:text-gray-700 mb-2\"  onClick={ () => { setPage(page + 1)}}>\r\n                        <FaArrowRight className=\" text-xl\"/>\r\n                    </button>\r\n                </div>\r\n            </TabContainer>\r\n\r\n            <TabContainer className=\"\" tabIndex={1} tabController={tabController}>\r\n\r\n                <PostContainer posts={ favPosts } onOptions={ onOptions}\r\n                    onLike={ onLikeHandler} onFav={ onFavHandler} onChat={ onSeeCommentsHandler}/>\r\n            </TabContainer>\r\n\r\n            <TabContainer className=\"\" tabIndex={2} tabController={tabController}>\r\n                <CommentView post={selectedPost} onComment={onCommentHandler}>\r\n                    <Post post={ selectedPost } onOptions={ onOptions}\r\n                        onLike={ onLikeHandler} onFav={ onFavHandler} onChat={ onSeeCommentsHandler}/>\r\n                </CommentView>\r\n            </TabContainer>\r\n\r\n            { showOptions && <Options options={[\r\n                { text: \"Dar like\", action: () => onLikeHandler(selectedPost)},\r\n                { text: \"Favorito\", action: () => onFavHandler(selectedPost)},\r\n                { text: \"Ver Comentarios\", action: () => onSeeCommentsHandler(selectedPost)},\r\n                { text: \"Cancelar\", action: () => { setShowOptions(false) }}\r\n                ]}\r\n                onClickOutside= { hideOptions}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;\r\n","const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\nconst transformPost = (rawPost) => {\r\n    return {\r\n        _id: rawPost._id,\r\n        title: rawPost.title,\r\n        description: rawPost.description,\r\n        image: rawPost.image,\r\n        active: rawPost.active,\r\n        createdAt: rawPost.createdAt,\r\n        user: rawPost.user,\r\n        likes: rawPost.likes\r\n    }\r\n}\r\n\r\nconst adminServices = {\r\n\r\n    nullPost: {\r\n        _id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        image: null,\r\n        active: false,\r\n        createdAt: null,\r\n        user: { username: \"\"},\r\n        likes: []\r\n    },\r\n\r\n    createPost: async (token, title, description, image) => {\r\n        try{\r\n            const config = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    description: description,\r\n                    image: image\r\n                })\r\n            };\r\n      \r\n            const response = await fetch(`${BASE_URL}/post/create`, config);\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            };\r\n        } catch (error) {\r\n            console.error(error);\r\n            return {};\r\n        }\r\n    },\r\n\r\n    ownedPost: async (token) => {\r\n        try{\r\n            const config = { \r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            };\r\n      \r\n            const response = await fetch(`${BASE_URL}/post/owned`, config);\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data.data;\r\n            };\r\n        } catch (error) {\r\n            console.error(error);\r\n            return {};\r\n        }\r\n    },\r\n    \r\n    updatePost: async (token, id, title, description, image) => {\r\n        try{\r\n            const config = {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    description: description,\r\n                    image: image\r\n                })\r\n            };\r\n            \r\n            const response = await fetch(`${BASE_URL}/post/update/${id}`, config);\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            };\r\n        } catch (error) {\r\n            console.error(error);\r\n            return {};\r\n        }\r\n    },\r\n\r\n    toggleActive: async (token, id) => {\r\n        try{\r\n            const config = {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            };\r\n      \r\n            const response = await fetch(`${BASE_URL}/post/toggle/${id}`, config);\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            };\r\n        } catch (error) {\r\n            console.error(error);\r\n            return {};\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default adminServices;\r\n\r\n/*\r\n\r\nconst config = {\r\n    method: \"POST\",\r\n    headers: {\r\n        \"Content-Type\": `application/json`\r\n    },\r\n    body: JSON.stringify({\r\n        username: \"gp15_admin\",\r\n        password: \"fW6hnXheoxquMQ9H\"\r\n    })\r\n};\r\nconst response = await fetch(`https://posts-pw2021.herokuapp.com/api/v1/auth/signin`, config);\r\n\r\nif (response.ok) {\r\n    const data = await response.json();\r\n    console.log(data);\r\n    localStorage.setItem(\"token\", data.token);\r\n};\r\n\r\n    D7TmtCY4kZf7SFFI\r\n\r\n    token = localStorage.getItem(\"token\");\r\n    id='619b00736c9516021fcc6d50';\r\n    BASE_URL='https://posts-pw2021.herokuapp.com/api/v1'\r\n*/","import { useState } from \"react\";\r\nimport Title from '../../Components/Title/Title';\r\nimport Label from '../../Components/Label/Label';\r\nimport Input from '../../Components/Input/Input';\r\n\r\nconst PostForm = ( { onSubmit, idPost=\"\", titlePost=\"\", descriptionPost=\"\", imgPost=\"\" } ) => {\r\n    const [img, setImg] = useState(imgPost);\r\n    const [ error, setError] = useState(\"\");\r\n\r\n    const onChangeHandler = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n     \r\n        if(data.get(\"title\") && data.get(\"description\") && data.get(\"image\")) {\r\n            if( data.get(\"title\").length >= 8 && data.get(\"description\").length >= 8) {\r\n                onSubmit(data);\r\n            } else {\r\n                setError(\"Los campos deben tener mas de 8 caracteres\");\r\n            }\r\n        } else \r\n            setError(\"No deje campos vacios\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ onSubmitHandler } className=\" border-solid border-2 border-black w-80 flex flex-col bg-white rounded-2xl items-center \">\r\n            <input className='regular-style px-2 py-2' name=\"idPost\" value={idPost} type=\"hidden\"/>\r\n            <img className =\"mt-3 rounded-2xl h-52 w-72  \" src={ img } />\r\n            { error && <p className=\" mt-3 rounded-md p-2 text-center text-black  bg-red-300 select-none\">\r\n                        {error}\r\n                    </p>}\r\n            <label className=\" mt-3 block font-mono md:font-Cambria text-xl text-center \">\r\n                Titulo\r\n            </label>\r\n            <input className='regular-style px-2 py-2 border-solid border-2 border-black rounded-2xl' name=\"title\" defaultValue={titlePost} type=\"text\"/>\r\n            <label className=\" mt-3 block font-mono md:font-Cambria text-xl text-center\">\r\n                Descripcion\r\n            </label>\r\n            <input className='regular-style px-2 py-2\r\n            border-solid border-2 border-black rounded-2xl' name=\"description\" type=\"text\" defaultValue={descriptionPost}/>\r\n            <label className=\" mt-3 block font-mono md:font-Cambria text-xl text-center\">\r\n                Imagen\r\n            </label>\r\n            <input className='regular-style px-2 py-2\r\n            border-solid border-2 border-black rounded-2xl' name=\"image\" type=\"text\" defaultValue={imgPost} onChange={ e => onChangeHandler(e, setImg)}/>\r\n            <button className=\"mt-5 h-12 bg-blue-500 text-white py-2 px-2 rounded-md hover:bg-blue-800 font-mono md:font-Cambria text-2xl\" type=\"submit\">\r\n                Guardar\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import { useEffect, useState } from \"react\";\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport adminServices from \"../../Services/admin.services.js\";\r\nimport userServices from \"../../Services/user.services.js\";\r\nimport PostForm from \"../../Components/PostForm/PostForm.jsx\";\r\nimport { useSessionContext } from \"../../Contexts/SessionContext.js\";\r\nimport Options from \"../../Components/Options/Options.jsx\";\r\nimport TabContainer from \"../../Components/TabContainer/TabContainer.jsx\";\r\nimport PostContainer from \"../../Components/PostContainer/PostContainer.jsx\";\r\nimport CommentView from \"../../Components/CommentView/CommentView.jsx\";\r\nimport Post from \"../../Components/Post/Post.jsx\";\r\n\r\n\r\nconst nullPost = {\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    image: null,\r\n    active: false,\r\n    createdAt: null,\r\n    user: { username: \"\"},\r\n    likes: []\r\n};\r\n\r\nconst AdminPage = () => {\r\n    \r\n    const { token, user, logout } = useSessionContext();\r\n    const [ posts, setPosts ] = useState([]);\r\n    const [ showOptions, setShowOptions ] = useState(false);\r\n    const [ tabController, setTabController ] = useState(0);\r\n    const [ selectedPost, setSelectedPost ] = useState(nullPost);\r\n\r\n    useEffect( async () => {\r\n        if(token) {\r\n            let res = await adminServices.ownedPost(token);\r\n            setPosts(res);\r\n            console.log(posts);\r\n        }\r\n    }, [token])\r\n\r\n    const onCreateHandler= async (formData) => {\r\n        const res = await adminServices.createPost(\r\n            token,\r\n            formData.get(\"title\"),\r\n            formData.get(\"description\"),\r\n            formData.get(\"image\"));\r\n            if(res){\r\n                res = await adminServices.ownedPost(token);\r\n                setPosts(res);\r\n                setTabController(0);\r\n            }\r\n        //console.log(await res.json());\r\n    }\r\n\r\n    const onUpdateHandler= async (formData) => {\r\n        console.log(formData.get(\"idPost\"))\r\n        const res = await adminServices.updatePost(\r\n            token,\r\n            formData.get(\"idPost\"),\r\n            formData.get(\"title\"),\r\n            formData.get(\"description\"),\r\n            formData.get(\"image\"));\r\n\r\n            if(res) {\r\n                console.log(await res);\r\n                selectedPost.title = formData.get(\"title\");\r\n                selectedPost.description = formData.get(\"description\");\r\n                selectedPost.image = formData.get(\"image\");\r\n                setTabController(0);}\r\n            else\r\n                console.log(\"No se pudo editar\");\r\n    }\r\n\r\n    const onToggleOptionHandler = async () => {\r\n        let res = await adminServices.toggleActive(token, selectedPost._id);\r\n        if(res) {\r\n            selectedPost.active = !selectedPost.active;\r\n            console.log(await res);}\r\n        else {\r\n            console.log(\"No se pudo alternar\");}\r\n\r\n        setShowOptions(false);\r\n    }\r\n\r\n    const onEditOptionHandler = async (post) => {\r\n        setShowOptions(false)\r\n        setTabController(2);\r\n    }\r\n    \r\n    const onLikeHandler = async (post, set) => {\r\n        console.log(\"Dando like\");\r\n        setSelectedPost(post);\r\n        console.log(post);\r\n        setShowOptions(false);\r\n\r\n        let res = await userServices.like(token, post._id);\r\n        if( res) {\r\n            const updatePost = await userServices.getOne(token, post._id);\r\n            selectedPost.likes = await updatePost.likes;\r\n            post.likes = await updatePost.likes;\r\n            post = await updatePost;\r\n            setSelectedPost(updatePost);\r\n            console.log(post);\r\n        }\r\n        else\r\n            console.log(\"No se pudo likear\");\r\n    }\r\n\r\n    const onSeeCommentsHandler = (post) => {\r\n        setSelectedPost(post);\r\n        setTabController(3);\r\n        setShowOptions(false);\r\n    }\r\n\r\n    const onCommentHandler = async (post, description) => {\r\n        setSelectedPost(post);\r\n        console.log(\"comment\");\r\n        console.log(post);\r\n        console.log( description); \r\n        const res = await userServices.comment(token, post._id, description);\r\n        //console.log(await userServices.getOne(token, \"61a414c9f81b159c2faa38b0\"))\r\n        //selectedPost.comments.push({ _id: , user: { username: user.username}, description: description});\r\n        \r\n        console.log(await res);\r\n        if( await res) {\r\n            const updatePost = await userServices.getOne(token, post._id);\r\n            selectedPost.comments = await updatePost.comments;\r\n            setSelectedPost(updatePost)\r\n        }\r\n        else\r\n            console.log(\"No se pudo comentar\");\r\n    }\r\n\r\n\r\n    const onOptions = async (post) => {\r\n        setSelectedPost(post);\r\n        setShowOptions(true);\r\n    }\r\n    \r\n    const hideOptions = () => { setShowOptions(false)};\r\n\r\n    const hideShow = () => { return selectedPost.active ? \"Ocultar Post\" : \"Mostrar Post\"}\r\n    \r\n    return (\r\n        <div className=\" min-h-screen text-center flex flex-col font-mono md:font-Cambria  w-full bg-gray-300 h-full relative\">\r\n            \r\n            <div className=\"w-full flex flex-wrap justify-around mx-auto bg-blue-500 text-white py-2 px-3 md:font-Cambria text-xl \">\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ setTabController(0)}}>Ver mis post</button>\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ setTabController(1)}}>Añadir nuevo post</button>\r\n                <button className=\"hover:bg-blue-800 py-2 px-3\" onClick={()=>{ logout()}}>Logout</button>\r\n            </div>\r\n\r\n            <TabContainer tabIndex={0} tabController={tabController} >\r\n\r\n                <PostContainer posts={ posts } onOptions={ onOptions}\r\n                        onLike={ onLikeHandler} onChat={ onSeeCommentsHandler}/>\r\n            \r\n            </TabContainer>\r\n            \r\n            <TabContainer className=\"bg-gray-300 p-14 flex flex-col h-full justify-center items-center\" tabIndex={1} tabController={tabController} >\r\n                <button className=\"text-gray-400 self-start text-lg hover:text-gray-700 mb-2 absolute top-4 left-5\"  onClick={ () => {setTabController(0)}}>\r\n                    <FaArrowLeft className=\" text-xl\"/>\r\n                </button>\r\n                <PostForm onSubmit={ onCreateHandler } />\r\n            </TabContainer>\r\n            \r\n            <TabContainer className=\"bg-gray-300 p-4 flex flex-col h-full justify-center items-center\" tabIndex={2} tabController={tabController} >\r\n                <button className=\"text-gray-400 text-lg self-start hover:text-gray-700 mb-2 absolute top-4 left-5\" onClick={ () => {setTabController(0)}}>\r\n                    <FaArrowLeft className=\"text-xl\"/>\r\n                </button>\r\n                <PostForm onSubmit={ onUpdateHandler }\r\n                    idPost={selectedPost._id}\r\n                    titlePost={selectedPost.title}\r\n                    descriptionPost={selectedPost.description}\r\n                    imgPost={selectedPost.image} />\r\n            </TabContainer>\r\n\r\n            <TabContainer className=\"\" tabIndex={3} tabController={tabController}>\r\n                <CommentView post={selectedPost} onComment={onCommentHandler}>\r\n                    <Post post={ selectedPost } onOptions={ onOptions}\r\n                        onLike={ onLikeHandler} onChat={ onSeeCommentsHandler}/>\r\n                </CommentView>\r\n            </TabContainer>\r\n\r\n            { showOptions && <Options options={[\r\n                { text: \"Editar\", action: onEditOptionHandler},\r\n                { text:  hideShow(), action: onToggleOptionHandler},\r\n                { text: \"Ver Comentarios\", action: () => onSeeCommentsHandler(selectedPost)},\r\n                { text: \"Cancelar\", action: () => { setShowOptions(false) }}\r\n                ]}\r\n                onClickOutside= { hideOptions}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage;\r\n\r\n/*<div></div>\r\n            <PostAdmin post={selectedPost}/>\r\n\r\n*/","import { Navigate } from 'react-router-dom';\r\nimport { useSessionContext } from \"../../Contexts/SessionContext.js\";\r\n\r\nconst PrivateRoute = ({role=\"user\", children }) => {\r\n  const { token, user } = useSessionContext();\r\n  \r\n  if(!token) return <Navigate replace to=\"/Proyecto-Final-Web/login\"/>;\r\n  if(!user || user.role !== role) return <Navigate replace to=\"/404\"/>;\r\n\r\n  return children;\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport './App.css';\r\nimport Login from './Pages/Login/Login.jsx';\r\nimport NotFound from './Pages/NotFound/NotFound';\r\nimport UserPage from './Pages/UserPage/UserPage';\r\nimport AdminPage from './Pages/AdminPage/AdminPage';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>        \r\n        <Route path=\"/Proyecto-Final-Web/login\" element={<Login />} />\r\n        <Route path=\"/Proyecto-Final-Web/admin\"  element={<PrivateRoute role=\"admin\"><AdminPage /></PrivateRoute>} />\r\n        <Route path=\"/Proyecto-Final-Web/user\"   element={<PrivateRoute role=\"user\"> <UserPage /> </PrivateRoute>} />\r\n        <Route path=\"*\" element={<NotFound />}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SessionProvider } from \"./Contexts/SessionContext.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SessionProvider>\r\n      <App />\r\n    </SessionProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}